{
  "openapi": "3.0.0",
  "info": {
    "title": "Task Scheduler API",
    "description": "A RESTful Task Scheduler Service for managing HTTP tasks",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "Development server"
    }
  ],
  "paths": {
    "/tasks": {
      "post": {
        "summary": "Create a new task",
        "tags": ["tasks"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "summary": "List all tasks",
        "tags": ["tasks"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["scheduled", "cancelled", "completed"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "summary": "Get task by ID",
        "tags": ["tasks"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "put": {
        "summary": "Update a task",
        "tags": ["tasks"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "delete": {
        "summary": "Cancel a task",
        "tags": ["tasks"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task cancelled successfully"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/tasks/{id}/results": {
      "get": {
        "summary": "Get task execution results",
        "tags": ["tasks"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task execution results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResultListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/results": {
      "get": {
        "summary": "Get all task execution results",
        "tags": ["results"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "task_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "success",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of task execution results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResultListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Get system metrics",
        "tags": ["metrics"],
        "responses": {
          "200": {
            "description": "System metrics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metrics"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "trigger_type": {
            "type": "string",
            "enum": ["one-off", "cron"]
          },
          "trigger_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cron_expr": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "payload": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["scheduled", "cancelled", "completed"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "next_run": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateTaskRequest": {
        "type": "object",
        "required": ["name", "trigger", "action"],
        "properties": {
          "name": {
            "type": "string"
          },
          "trigger": {
            "$ref": "#/components/schemas/CreateTaskTrigger"
          },
          "action": {
            "$ref": "#/components/schemas/CreateTaskAction"
          }
        }
      },
      "CreateTaskTrigger": {
        "type": "object",
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["one-off", "cron"]
          },
          "datetime": {
            "type": "string",
            "format": "date-time"
          },
          "cron": {
            "type": "string"
          }
        }
      },
      "CreateTaskAction": {
        "type": "object",
        "required": ["method", "url"],
        "properties": {
          "method": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "payload": {
            "type": "object"
          }
        }
      },
      "UpdateTaskRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "trigger": {
            "$ref": "#/components/schemas/CreateTaskTrigger"
          },
          "action": {
            "$ref": "#/components/schemas/CreateTaskAction"
          }
        }
      },
      "TaskResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "task_id": {
            "type": "string",
            "format": "uuid"
          },
          "run_at": {
            "type": "string",
            "format": "date-time"
          },
          "status_code": {
            "type": "integer",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "response_headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "response_body": {
            "type": "string",
            "nullable": true
          },
          "error_message": {
            "type": "string",
            "nullable": true
          },
          "duration_ms": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TaskListResponse": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "TaskResultListResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskResult"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          }
        }
      },
      "Metrics": {
        "type": "object",
        "properties": {
          "total_tasks_executed": {
            "type": "integer"
          },
          "successful_tasks": {
            "type": "integer"
          },
          "failed_tasks": {
            "type": "integer"
          },
          "success_rate_percent": {
            "type": "number"
          },
          "average_execution_ms": {
            "type": "integer"
          },
          "tasks_per_minute": {
            "type": "number"
          }
        }
      }
    }
  }
}
